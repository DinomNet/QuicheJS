/**
 * QuicheJS by Dinom
 * Version: v1.0.1
 * Official Repository: https://github.com/DinomNet/QuicheJS/
 * 
 * MIT License
 * 
 * Copyright (c) 2024, github.com/Chefaroon
 * 
 * Permission is hereby granted, free of charge, to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

!function(e,t){function a(e){var t={cache:!1,online:!1,support:{ls:!1,cache:!1},networkChecked:!1,loading:!1,loaded:!1},a={debug:!1,onlineCheckTimeout:1500,checkForUpdates:!0,storage:"cache",namespace:"quiche"};function r(){console.error("Invalid options passed to QuicheJS constructor."),console.warn("QuicheJS uses an object for options. Please check the documentation for supported options")}async function n(){if(t.networkChecked=!0,!1===a.checkForUpdates)return!0;if(!navigator||!navigator.onLine)return!1;let e=new AbortController,r=setTimeout(()=>e.abort(),a.onlineCheckTimeout);try{let n=await Promise.race([fetch("https://www.google.com/generate_204",{method:"HEAD",mode:"no-cors",cache:"no-store",signal:e.signal})]);return clearTimeout(r),"opaque"===n.type||n.ok}catch(o){return!1}}async function o(){t.cache={file:await caches.open(a.namespace+"_files"),tag:await caches.open(a.namespace+"_tags"),label_file:a.namespace+"_files",label_tag:a.namespace+"_tags"}}async function c(e){if(t.loading=new Promise(e=>{this.__LoadingProcess=e}),e&&function e(n){if("object"!=typeof n||Object.keys(n).length<1)return r();for(var o in n){if(!a.hasOwnProperty(o))return r();a[o]=n[o]}!function e(){if(["local","localstorage","ls"].includes(a.storage.toLowerCase())&&(a.storage="local"),!["cache","local"].includes(a.storage)){if(console.error("Invalid storage option passed to QuicheJS constructor."),t.support.cache){console.warn('Defaulting storage to "cache"'),a.storage="cache";return}if(t.support.ls){console.warn('Defaulting storage to "localStorage"'),a.storage="local";return}}}()}(e),t.support.cache=function e(){try{return"caches"in window}catch(t){return!1}}(),t.support.ls=function e(){try{return localStorage.setItem("lstest","lstest"),localStorage.removeItem("lstest"),!0}catch(t){return!1}}(),!t.support.ls&&!t.support.cache)return console.error("Both LocalStorage and Cache API are not supported on this device. QuicheJS cannot be used."),!1;"cache"===a.storage&&t.support.cache&&await o();try{if(await n())return t.online=!0,!0;return a.debug&&console.warn("Online check timed out. Device is offline"),!1}finally{a.debug&&console.log("QuicheJS loaded: \n	Debug:",a.debug,"\n	LocalStorage support:",t.support.ls,"\n	Cache API support:",t.support.cache,"\n	Device online: ",t.online,"\n	Check for updates: ",a.checkForUpdates,"\n	Storage: ",a.storage,"\n	Namespace: ",a.namespace),t.loaded=!0,this.__LoadingProcess()}}async function s(e){return Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",new TextEncoder().encode(e)))).map(e=>e.toString(16).padStart(2,"0")).join("")}function i(e){switch(e.type){case"js":var t=document.createElement("script");t.innerHTML=e.content,document.head.appendChild(t);break;case"css":var t=document.createElement("style");t.innerHTML=e.content,document.head.appendChild(t);break;case"font":var r=URL.createObjectURL(e.content),t=document.createElement("style");t.innerHTML=`@font-face{font-family: "${e.name}";src: url(${r});}`,document.head.appendChild(t);break;default:a.debug&&console.error('Resource type "'+e.type+'" cannot be directly rendered. Consider using get() instead.')}}function u(e){return a.namespace+"::"+e}async function l(e){switch(a.storage){case"local":var r=localStorage.getItem(u(e)),n=JSON.parse(localStorage.getItem(u(e)+"::V"));if(r&&n&&n.hasOwnProperty("ver"))return n.ver;return!1;case"cache":var r=await t.cache.file.match(e),n=await t.cache.tag.match(e);if(n&&200==n.status&&(n=await n.text())&&(n=JSON.parse(n)),r&&n&&n.hasOwnProperty("ver"))return n.ver;return!1}}async function d(e){try{let t=await fetch(e,{method:"HEAD"});if(!t.ok)throw Error(`HTTP error! status: ${t.status}`);return s(t.headers.get("Last-Modified")+t.headers.get("ETag")).then(e=>e)}catch(a){return console.error("Error checking headers for "+e+":",a),!1}}async function h(e,t){a.debug&&console.log("Downloading "+e);try{let r=await fetch(e);if(!r.ok)throw console.error("HTTP error downloading "+e),Error(`HTTP error! status: ${r.status}`);switch(t){case"js":case"css":case"text":var n=await r.text();break;case"font":case"img":case"blob":var n=await r.blob()}return{hash:await s(r.headers.get("Last-Modified")+r.headers.get("ETag")),file:n}}catch(o){return console.error("Error downloading "+e+":",o),!1}}async function p(e,r,n,o){switch(a.storage){case"local":var c;localStorage.setItem(u(e),await ((c=r)instanceof Blob?c.arrayBuffer().then(e=>JSON.stringify({__blob:!0,type:c.type,data:Array.from(new Uint8Array(e))})):JSON.stringify(c,(e,t)=>t instanceof ArrayBuffer?new Uint8Array(t):t))),localStorage.setItem(u(e+"::V"),JSON.stringify({type:o,ver:n}));break;case"cache":await t.cache.file.put(e,new Response(r,{headers:{type:"string"==typeof r?"text":"blob"}})),await t.cache.tag.put(e,new Response(JSON.stringify({type:o,ver:n})))}return{content:r,type:o}}async function f(e,t){return await h(e,t).then(({hash:r,file:n})=>!!r&&!!n&&p(e,n,r,t).then(e=>(a.debug&&console.log("Downloaded and stored. Version: "+r),e)))}async function g(e){switch(a.storage){case"local":var r=localStorage.getItem(u(e)),n=JSON.parse(localStorage.getItem(u(e)+"::V"));if(r&&n&&n.hasOwnProperty("type"))return{type:n.type,content:await function e(t){let a=JSON.parse(t);return a.__blob?new Blob([new Uint8Array(a.data)],{type:a.type}):JSON.parse(t,(e,t)=>Array.isArray(t)&&t.every(e=>"number"==typeof e)?new Uint8Array(t).buffer:t)}(r)};return!1;case"cache":var r=await t.cache.file.match(e),n=await t.cache.tag.match(e);if(n&&200==n.status&&(n=await n.text())&&(n=JSON.parse(n)),r&&n&&n.hasOwnProperty("type")){switch(r.headers.get("type")){case"text":var o=await r.text();break;case"blob":var o=await r.blob();break;default:console.error("no header found")}return{type:n.type,content:o}}return!1}}async function y(){await caches.delete(t.cache.label_tag),await caches.delete(t.cache.label_file),await o()}function w(){for(var e=0;e<localStorage.length;e++){var t=localStorage.key(e);t.startsWith(a.namespace+"::")&&localStorage.removeItem(t)}}async function b(e){if(!Array.isArray(e))return console.error("load() requires an array of at least one object."),!1;for(let r of(t.loaded||await t.loading,e)){if(a.debug&&console.log("Processing "+r.url),!r.hasOwnProperty("url")||!r.hasOwnProperty("type")){console.error("Resource list must be an array of objects with defined URL and Type.");continue}if(!["js","css","font"].includes(r.type)){console.error("Resource type "+r.type+" cannot be loaded via load(). You should use cache() instead.");continue}if("font"==r.type&&!r.hasOwnProperty("name")){console.error('Font resources require "name" property to be defined.');continue}a.debug&&console.log("Loading "+r.url+" ...");var n=await l(r.url).then(e=>e);if(!n){if(a.debug&&console.log("Cache not found, downloading ..."),!t.online)return console.error("Device is Offline, cannot download. Terminating ..."),!1;f(r.url,r.type).then(e=>{"font"==r.type&&r.hasOwnProperty("name")&&(e.name=r.name),i(e)});continue}if(a.checkForUpdates){if(!t.online){a.debug&&console.log("Device is Offline, skipping update check."),i(r);continue}if(n===await d(r.url).then(e=>e)){a.debug&&console.log("Cached version is up-to-date."),i(r);continue}a.debug&&console.log("Versions mismatch, updating ..."),f(r.url,r.type).then(e=>{a.debug&&console.log("Updated to the latest version."),"font"==r.type&&r.hasOwnProperty("name")&&(e.name=r.name),i(r)});continue}g(r.url).then(e=>{"font"==r.type&&r.hasOwnProperty("name")&&(e.name=r.name),i(e)})}}async function m(e){if(!Array.isArray(e))return console.error("cache() requires an array of at least one object."),!1;for(let r of(t.loaded||await t.loading,e)){if(!r.hasOwnProperty("url")||!r.hasOwnProperty("type")){console.error("Resource list must be an array of objects with defined URL and Type.");continue}a.debug&&console.log("Caching "+r.url);var n=await l(r.url).then(e=>e);if(!n&&a.debug&&console.log("No stored version"),!n){if(!t.online){console.error("Resource is not cached but the Device is Offline - cannot download.");continue}a.debug&&console.log("Downloading ..."),f(r.url,r.type).then(()=>{a.debug&&console.log("Latest version downloaded and cached.")});continue}if(a.checkForUpdates){if(!t.online){console.warn("Resource cached but the Device is Offline - cannot check for updates.");continue}if(n===await d(r.url).then(e=>e)){a.debug&&console.log("Cached version is up-to-date.");continue}a.debug&&console.log("Versions mismatch, updating ..."),f(r.url,r.type).then(()=>{a.debug&&console.log("Updated to the latest version.")})}a.debug&&console.log(r.url+" is ready")}}async function v(e){var t=await g(e);return!!(t&&t.hasOwnProperty("content"))&&t.content}async function k(e){if("object"!=typeof e||!e.hasOwnProperty("type")||!e.hasOwnProperty("url"))return console.error("update() requires an object with Type and URL properties."),!1;var t=a.checkForUpdates;a.checkForUpdates=!0,await m([e]),a.checkForUpdates=t}async function _(){if(t.loaded||await t.loading,!t.online)return console.warn("Device is Offline - cannot check for updates."),!1;var e=a.checkForUpdates;switch(a.storage){case"local":for(var r=0;r<localStorage.length;r++){var n=localStorage.key(r);if(n.startsWith(a.namespace+"::")&&n.endsWith("::V")){var o=n.replace(RegExp("^"+a.namespace+"::|::V$","g"),""),c=JSON.parse(localStorage.getItem(n)),s=await d(o).then(e=>e);if(c.ver===s){a.debug&&console.log("Cached version is up-to-date.");continue}a.debug&&console.log("Versions mismatch, updating ..."),f(o,c.type).then(()=>{a.debug&&console.log("Updated to the latest version.")})}}break;case"cache":for(let i of(await t.cache.tag.keys())){var u=JSON.parse(await t.cache.tag.match(i.url).then(e=>e.text())),s=await d(i.url).then(e=>e);if(u.ver===s){a.debug&&console.log("Cached version is up-to-date.");continue}a.debug&&console.log("Versions mismatch, updating ..."),f(i.url,u.type).then(()=>{a.debug&&console.log("Updated to the latest version.")})}}a.checkForUpdates=e}async function P(e){var t="all";if(e){if(!["cache","local","ls","localStorage"].includes(e.toLowerCase()))return console.error("Invalid storage type passed to clearAll()."),!1;t=e.toLowerCase()}switch(t){case"cache":await y();break;case"local":case"ls":case"localStorage":w();break;case"all":await y(),w()}}return c(e),{debug:a.debug,onlineCheckTimeout:a.onlineCheckTimeout,checkForUpdates:a.checkForUpdates,storage:a.storage,namespace:a.namespace,load:b,cache:m,render:i,get:v,update:k,updateAll:_,clearAll:P}}"undefined"!=typeof module&&module.exports?module.exports=a:"function"==typeof define&&define.amd?define(function(){return a}):e.QuicheJS=a}("undefined"!=typeof window?window:this);